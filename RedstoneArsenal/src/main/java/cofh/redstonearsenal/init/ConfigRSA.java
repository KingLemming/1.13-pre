package cofh.redstonearsenal.init;

import cofh.core.key.KeyMultiModeItem;
import cofh.lib.item.IMultiModeItem;
import cofh.redstonearsenal.RedstoneArsenal;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.item.ItemStack;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;

import java.util.List;

import static cofh.lib.util.Constants.ID_REDSTONE_ARSENAL;
import static cofh.lib.util.helpers.StringHelper.getKeyName;
import static cofh.lib.util.helpers.StringHelper.localizeFormat;
import static cofh.redstonearsenal.RedstoneArsenal.config;
import static cofh.redstonearsenal.init.CreativeTabsRSA.*;

public class ConfigRSA {

	private ConfigRSA() {

	}

	public static void configCommon() {

		String category;
		String comment;

		category = "~MODPACK OPTIONS~";
		comment = "If TRUE, then ALL RECIPES from this mod will be DISABLED. Everything will still be registered - this is a convenience option for pack makers who are completely overhauling recipes.";
		disableAllRecipes = config.getBoolean("Disable ALL Recipes", category, false, comment);

		// region GENERAL
		category = "General";

		comment = "If TRUE, explosions generated by Redstone Arsenal can destroy blocks.";
		explosionsDestroyBlocks = config.getBoolean("Explosions Destroy Blocks", category, explosionsDestroyBlocks, comment);
		// endregion
	}

	public static void configClient() {

		String category;
		String comment;

		// region INTERFACE
		category = "Interface";

		comment = "If TRUE, Redstone Arsenal will use Vanilla Minecraft Creative Tabs and not its own Tab.";
		boolean useVanillaTabs = RedstoneArsenal.configClient.getBoolean("Use Vanilla Creative Tabs", category, false, comment);

		if (useVanillaTabs) {
			tabItems = CreativeTabs.MISC;
			tabBasicTools = CreativeTabs.TOOLS;
			tabBasicCombat = CreativeTabs.COMBAT;
			tabBasicArmor = CreativeTabs.COMBAT;
		} else {
			tabCommon = new CreativeTabs(ID_REDSTONE_ARSENAL) {

				@Override
				@SideOnly (Side.CLIENT)
				public ItemStack getTabIconItem() {

					return BlocksRSA.blockFluxInfused;
				}
			};
			tabItems = tabCommon;
			tabBasicTools = tabCommon;
			tabBasicCombat = tabCommon;
			tabBasicArmor = tabCommon;
		}
	}

	public static void addEmpoweredTip(IMultiModeItem item, ItemStack stack, List<String> tooltip) {

		if (item.getMode(stack) == 1) {
			tooltip.add(localizeFormat("info.redstonearsenal.tool.charge_off", getKeyName(KeyMultiModeItem.INSTANCE.getKey())));
		} else {
			tooltip.add(localizeFormat("info.redstonearsenal.tool.charge_on", getKeyName(KeyMultiModeItem.INSTANCE.getKey())));
		}
	}

	// region MODPACK OPTIONS
	public static boolean disableAllRecipes = false;
	public static boolean explosionsDestroyBlocks = false;
	// endregion

	// region INTERFACES
	public static boolean showArmorCharge = true;
	public static boolean showToolCharge = true;
	// endregion
}
